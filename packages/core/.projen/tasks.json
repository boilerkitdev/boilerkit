{
  "tasks": {
    "build": {
      "name": "build",
      "description": "Full release build",
      "steps": [
        {
          "spawn": "pre-compile"
        },
        {
          "spawn": "compile"
        },
        {
          "spawn": "post-compile"
        },
        {
          "spawn": "test"
        },
        {
          "spawn": "package"
        }
      ]
    },
    "compile": {
      "name": "compile",
      "description": "Only compile",
      "steps": [
        {
          "exec": "tsc --build"
        },
        {
          "exec": "tsup --config=\"tsup.config.json\""
        }
      ]
    },
    "default": {
      "name": "default",
      "description": "Synthesize project files",
      "steps": [
        {
          "exec": "projen default",
          "cwd": "../.."
        }
      ]
    },
    "eslint": {
      "name": "eslint",
      "description": "Runs eslint against the codebase",
      "steps": [
        {
          "exec": "eslint --fix --no-error-on-unmatched-pattern src test build-tools docs"
        }
      ]
    },
    "install": {
      "name": "install",
      "description": "Install project dependencies and update lockfile (non-frozen)",
      "steps": [
        {
          "exec": "pnpm i --no-frozen-lockfile"
        }
      ]
    },
    "install:ci": {
      "name": "install:ci",
      "description": "Install project dependencies using frozen lockfile",
      "steps": [
        {
          "exec": "pnpm i --frozen-lockfile"
        }
      ]
    },
    "package": {
      "name": "package",
      "description": "Creates the distribution package",
      "steps": [
        {
          "exec": "publint run --strict"
        },
        {
          "spawn": "test:attw"
        }
      ]
    },
    "post-compile": {
      "name": "post-compile",
      "description": "Runs after successful compilation"
    },
    "postpack": {
      "name": "postpack",
      "steps": [
        {
          "exec": "mv -f package.json.original package.json"
        }
      ]
    },
    "pre-compile": {
      "name": "pre-compile",
      "description": "Prepare the project for compilation"
    },
    "prepack": {
      "name": "prepack",
      "steps": [
        {
          "exec": "cp package.json package.json.original"
        },
        {
          "exec": "clear-package-json package.json -o package.json --fields \"//\""
        }
      ]
    },
    "test": {
      "name": "test",
      "description": "Run tests",
      "steps": [
        {
          "spawn": "eslint"
        },
        {
          "exec": "vitest run --config=\"vitest.config.ts\"",
          "env": {
            "VITE_CJS_IGNORE_WARNING": "true"
          }
        }
      ]
    },
    "test:attw": {
      "name": "test:attw",
      "env": {
        "PACK_DESTINATION": "$(mktemp -d)"
      },
      "steps": [
        {
          "exec": "npm pack --pack-destination=$PACK_DESTINATION"
        },
        {
          "exec": "attw $PACK_DESTINATION/*.tgz"
        }
      ]
    },
    "test:watch": {
      "name": "test:watch",
      "description": "Run Vitest in watch mode",
      "steps": [
        {
          "exec": "vitest watch --config=\"vitest.config.ts\""
        }
      ]
    },
    "watch": {
      "name": "watch",
      "description": "Watch & compile in the background",
      "steps": [
        {
          "exec": "tsc --build -w"
        }
      ]
    }
  },
  "env": {
    "PATH": "$(pnpm -c exec \"node --print process.env.PATH\")"
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \"projen\"."
}
