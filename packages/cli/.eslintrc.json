// ~~ Generated by projen. To modify, edit .projenrc.js and run "pnpm --silent dlx projen".
{
  "env": {
    "jest": true,
    "node": true
  },
  "root": true,
  "plugins": [
    "@typescript-eslint",
    "import",
    "vitest",
    "simple-import-sort",
    "regexp",
    "unicorn"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2018,
    "sourceType": "module",
    "project": "./tsconfig.dev.json"
  },
  "extends": [
    "plugin:import/typescript",
    "oclif",
    "oclif-typescript",
    "plugin:vitest/all",
    "plugin:@typescript-eslint/stylistic-type-checked",
    "plugin:@typescript-eslint/strict",
    "plugin:jsdoc/recommended-typescript-error",
    "plugin:regexp/recommended",
    "plugin:unicorn/recommended"
  ],
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [
        ".ts",
        ".tsx"
      ]
    },
    "import/resolver": {
      "node": {},
      "typescript": {
        "project": "./tsconfig.dev.json",
        "alwaysTryTypes": true
      }
    }
  },
  "ignorePatterns": [
    "*.js",
    "*.d.ts",
    "node_modules/",
    "*.generated.ts",
    "coverage",
    "src/index.ts",
    "vitest.config.ts"
  ],
  "rules": {
    "indent": [
      "off"
    ],
    "@typescript-eslint/indent": [
      "error",
      2
    ],
    "quotes": [
      "error",
      "single",
      {
        "avoidEscape": true
      }
    ],
    "comma-dangle": [
      "error",
      "always-multiline"
    ],
    "comma-spacing": [
      "error",
      {
        "before": false,
        "after": true
      }
    ],
    "no-multi-spaces": [
      "error",
      {
        "ignoreEOLComments": false
      }
    ],
    "array-bracket-spacing": [
      "error",
      "never"
    ],
    "array-bracket-newline": [
      "error",
      "consistent"
    ],
    "object-curly-spacing": "off",
    "object-curly-newline": [
      "error",
      {
        "multiline": true,
        "consistent": true
      }
    ],
    "object-property-newline": [
      "error",
      {
        "allowAllPropertiesOnSameLine": true
      }
    ],
    "keyword-spacing": "off",
    "brace-style": [
      "error",
      "1tbs",
      {
        "allowSingleLine": true
      }
    ],
    "space-before-blocks": "off",
    "curly": [
      "error"
    ],
    "@typescript-eslint/member-delimiter-style": [
      "error"
    ],
    "semi": [
      "error",
      "never"
    ],
    "max-len": [
      "error",
      {
        "code": 150,
        "ignoreUrls": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreComments": true,
        "ignoreRegExpLiterals": true
      }
    ],
    "quote-props": [
      "error",
      "consistent-as-needed"
    ],
    "@typescript-eslint/no-require-imports": [
      "error"
    ],
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/test/**",
          "**/build-tools/**",
          "**/*.test.ts",
          "**/*.test.tsx"
        ],
        "optionalDependencies": false,
        "peerDependencies": true
      }
    ],
    "import/no-unresolved": [
      "error"
    ],
    "import/order": [
      "off"
    ],
    "no-duplicate-imports": "off",
    "no-shadow": [
      "off"
    ],
    "@typescript-eslint/no-shadow": [
      "error"
    ],
    "key-spacing": "off",
    "no-multiple-empty-lines": [
      "error"
    ],
    "@typescript-eslint/no-floating-promises": [
      "error"
    ],
    "no-return-await": [
      "off"
    ],
    "@typescript-eslint/return-await": [
      "error"
    ],
    "no-trailing-spaces": [
      "error"
    ],
    "dot-notation": [
      "error"
    ],
    "no-bitwise": [
      "error"
    ],
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "default": [
          "public-static-field",
          "public-static-method",
          "protected-static-field",
          "protected-static-method",
          "private-static-field",
          "private-static-method",
          "field",
          "constructor",
          "method"
        ]
      }
    ],
    "vitest/prefer-to-be-truthy": "off",
    "vitest/prefer-to-be-falsy": "off",
    "vitest/require-hook": "off",
    "vitest/no-hooks": "off",
    "vitest/no-conditional-tests": "off",
    "vitest/no-conditional-in-test": "off",
    "vitest/max-expects": "off",
    "vitest/consistent-test-it": [
      "error",
      {
        "fn": "it",
        "withinDescribe": "it"
      }
    ],
    "@typescript-eslint/no-empty-interface": "off",
    "@typescript-eslint/keyword-spacing": "error",
    "space-before-function-paren": "off",
    "@typescript-eslint/space-before-function-paren": [
      "error",
      {
        "anonymous": "never",
        "asyncArrow": "always",
        "named": "never"
      }
    ],
    "block-spacing": "off",
    "@typescript-eslint/block-spacing": "error",
    "space-infix-ops": "off",
    "@typescript-eslint/space-infix-ops": "error",
    "arrow-spacing": [
      "error",
      {
        "before": true,
        "after": true
      }
    ],
    "@typescript-eslint/object-curly-spacing": [
      "error",
      "always"
    ],
    "@typescript-eslint/type-annotation-spacing": "error",
    "@typescript-eslint/space-before-blocks": "error",
    "@typescript-eslint/key-spacing": "error",
    "lines-around-comment": "off",
    "@typescript-eslint/lines-around-comment": [
      "error",
      {
        "allowArrayStart": true,
        "allowBlockStart": true,
        "allowClassStart": true,
        "allowEnumStart": true,
        "allowInterfaceStart": true,
        "allowModuleStart": true,
        "allowObjectStart": true,
        "allowTypeStart": true,
        "beforeBlockComment": true
      }
    ],
    "lines-between-class-members": "off",
    "@typescript-eslint/lines-between-class-members": [
      "error",
      "always",
      {
        "exceptAfterSingleLine": true
      }
    ],
    "jsdoc/require-jsdoc": "off",
    "jsdoc/require-param-description": "off",
    "jsdoc/require-param": "off",
    "jsdoc/require-returns": "off",
    "jsdoc/tag-lines": [
      "error",
      "any",
      {
        "startLines": 1
      }
    ],
    "import/no-duplicates": "error",
    "@typescript-eslint/consistent-type-exports": "error",
    "@typescript-eslint/consistent-type-imports": "error",
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          [
            "^\\u0000"
          ],
          [
            "^node:",
            "^assert$",
            "^assert/strict$",
            "^async_hooks$",
            "^buffer$",
            "^child_process$",
            "^cluster$",
            "^console$",
            "^constants$",
            "^crypto$",
            "^dgram$",
            "^diagnostics_channel$",
            "^dns$",
            "^dns/promises$",
            "^domain$",
            "^events$",
            "^fs$",
            "^fs/promises$",
            "^http$",
            "^http2$",
            "^https$",
            "^inspector$",
            "^module$",
            "^net$",
            "^os$",
            "^path$",
            "^path/posix$",
            "^path/win32$",
            "^perf_hooks$",
            "^process$",
            "^punycode$",
            "^querystring$",
            "^readline$",
            "^readline/promises$",
            "^repl$",
            "^stream$",
            "^stream/consumers$",
            "^stream/promises$",
            "^stream/web$",
            "^string_decoder$",
            "^sys$",
            "^timers$",
            "^timers/promises$",
            "^tls$",
            "^trace_events$",
            "^tty$",
            "^url$",
            "^util$",
            "^util/types$",
            "^v8$",
            "^vm$",
            "^wasi$",
            "^worker_threads$",
            "^zlib$"
          ],
          [
            "^@?\\w"
          ],
          [
            "^@boilerkit/tpl$"
          ],
          [
            "^"
          ],
          [
            "^\\."
          ]
        ]
      }
    ],
    "simple-import-sort/exports": "error",
    "import/first": "error",
    "import/newline-after-import": "error",
    "unicorn/prefer-module": "off",
    "unicorn/prefer-string-replace-all": "off",
    "unicorn/no-array-callback-reference": "off",
    "unicorn/prevent-abbreviations": "off"
  },
  "overrides": []
}
